package com.geometric.grafico;

import com.geometric.Exportar.ExportarImagen;
import com.geometric.Exportar.ExportarPDF;
import com.geometric.abstracto.Instruccion;
import com.geometric.analisis.CargaArchivo;
import com.geometric.analisis.Sintactico;
import com.geometric.analisis.scanner;
import com.geometric.excepciones.Errores;
import com.geometric.grafico.Reportes.Operaciones;
import com.geometric.simbolo.Arbol;
import com.geometric.simbolo.TablaSimbolos;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vicente
 */
public class Home extends javax.swing.JPanel {
    
    private CargaArchivo cargaArchivo;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        cargaArchivo = new CargaArchivo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaEntrada = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextConsola = new javax.swing.JTextArea();
        jCompilar = new javax.swing.JPanel();
        labelCompilar = new javax.swing.JLabel();
        jLimpiar = new javax.swing.JPanel();
        labelLimpiar = new javax.swing.JLabel();
        jAnimar = new javax.swing.JPanel();
        labelAnimar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCargarArchivo = new javax.swing.JPanel();
        labelCargarArchivo = new javax.swing.JLabel();
        jExportar = new javax.swing.JPanel();
        labelAnimar1 = new javax.swing.JLabel();
        jPDF = new javax.swing.JPanel();
        labelPDF = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextAreaEntrada.setColumns(20);
        jTextAreaEntrada.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jTextAreaEntrada.setRows(5);
        jScrollPane1.setViewportView(jTextAreaEntrada);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 750, 310));

        jTextConsola.setColumns(20);
        jTextConsola.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jTextConsola.setRows(5);
        jScrollPane2.setViewportView(jTextConsola);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 1030, 170));

        jCompilar.setBackground(new java.awt.Color(50, 81, 143));
        jCompilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCompilarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jCompilarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCompilarMouseExited(evt);
            }
        });

        labelCompilar.setBackground(new java.awt.Color(255, 255, 255));
        labelCompilar.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelCompilar.setForeground(new java.awt.Color(255, 255, 255));
        labelCompilar.setText("COMPILAR");

        javax.swing.GroupLayout jCompilarLayout = new javax.swing.GroupLayout(jCompilar);
        jCompilar.setLayout(jCompilarLayout);
        jCompilarLayout.setHorizontalGroup(
            jCompilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCompilarLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(labelCompilar)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jCompilarLayout.setVerticalGroup(
            jCompilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jCompilarLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(labelCompilar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jCompilar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, 230, 50));

        jLimpiar.setBackground(new java.awt.Color(50, 81, 143));
        jLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLimpiarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLimpiarMouseExited(evt);
            }
        });

        labelLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        labelLimpiar.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        labelLimpiar.setText("LIMPIAR");

        javax.swing.GroupLayout jLimpiarLayout = new javax.swing.GroupLayout(jLimpiar);
        jLimpiar.setLayout(jLimpiarLayout);
        jLimpiarLayout.setHorizontalGroup(
            jLimpiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLimpiarLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelLimpiar)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jLimpiarLayout.setVerticalGroup(
            jLimpiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLimpiarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel1.add(jLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 150, 230, -1));

        jAnimar.setBackground(new java.awt.Color(50, 81, 143));
        jAnimar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAnimarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jAnimarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jAnimarMouseExited(evt);
            }
        });

        labelAnimar.setBackground(new java.awt.Color(255, 255, 255));
        labelAnimar.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelAnimar.setForeground(new java.awt.Color(255, 255, 255));
        labelAnimar.setText("ANIMAR");

        javax.swing.GroupLayout jAnimarLayout = new javax.swing.GroupLayout(jAnimar);
        jAnimar.setLayout(jAnimarLayout);
        jAnimarLayout.setHorizontalGroup(
            jAnimarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAnimarLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelAnimar)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jAnimarLayout.setVerticalGroup(
            jAnimarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAnimarLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(labelAnimar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jAnimar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 200, 230, -1));

        jLabel1.setFont(new java.awt.Font("FreeSans", 0, 20)); // NOI18N
        jLabel1.setText("OUTPUT");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, -1, -1));

        jLabel2.setFont(new java.awt.Font("Cantarell", 0, 20)); // NOI18N
        jLabel2.setText("ENTRADA");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, -1));

        jCargarArchivo.setBackground(new java.awt.Color(50, 81, 143));
        jCargarArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCargarArchivoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jCargarArchivoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCargarArchivoMouseExited(evt);
            }
        });

        labelCargarArchivo.setBackground(new java.awt.Color(255, 255, 255));
        labelCargarArchivo.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelCargarArchivo.setForeground(new java.awt.Color(255, 255, 255));
        labelCargarArchivo.setText("ARCHIVO");

        javax.swing.GroupLayout jCargarArchivoLayout = new javax.swing.GroupLayout(jCargarArchivo);
        jCargarArchivo.setLayout(jCargarArchivoLayout);
        jCargarArchivoLayout.setHorizontalGroup(
            jCargarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCargarArchivoLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(labelCargarArchivo)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jCargarArchivoLayout.setVerticalGroup(
            jCargarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jCargarArchivoLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(labelCargarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jCargarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, 230, -1));

        jExportar.setBackground(new java.awt.Color(50, 81, 143));
        jExportar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jExportarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jExportarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jExportarMouseExited(evt);
            }
        });

        labelAnimar1.setBackground(new java.awt.Color(255, 255, 255));
        labelAnimar1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelAnimar1.setForeground(new java.awt.Color(255, 255, 255));
        labelAnimar1.setText("CREAR IMG");

        javax.swing.GroupLayout jExportarLayout = new javax.swing.GroupLayout(jExportar);
        jExportar.setLayout(jExportarLayout);
        jExportarLayout.setHorizontalGroup(
            jExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jExportarLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelAnimar1)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jExportarLayout.setVerticalGroup(
            jExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jExportarLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(labelAnimar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 250, -1, -1));

        jPDF.setBackground(new java.awt.Color(50, 81, 143));
        jPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPDFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPDFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPDFMouseExited(evt);
            }
        });

        labelPDF.setBackground(new java.awt.Color(255, 255, 255));
        labelPDF.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelPDF.setForeground(new java.awt.Color(255, 255, 255));
        labelPDF.setText("CREAR PDF");

        javax.swing.GroupLayout jPDFLayout = new javax.swing.GroupLayout(jPDF);
        jPDF.setLayout(jPDFLayout);
        jPDFLayout.setHorizontalGroup(
            jPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDFLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(labelPDF)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPDFLayout.setVerticalGroup(
            jPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPDFLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(labelPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 300, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCompilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCompilarMouseClicked
       try {
        String texto = jTextAreaEntrada.getText();
        scanner s = new scanner(new BufferedReader(new StringReader(texto)));
        Sintactico p = new Sintactico(s);
        var resultado = p.parse();

        // Captura los errores léxicos y sintácticos
        LinkedList<Errores> lista = new LinkedList<>();
        lista.addAll(s.listaErrores);
        lista.addAll(p.listaErrores);

        if (lista.isEmpty()) {
            
            var ast = new Arbol((LinkedList<Instruccion>) resultado.value);
            var tabla = new TablaSimbolos();
            tabla.setNombre("Global");
            ast.setConsola("");

            for (var a : ast.getInstrucciones()) {
                if (a == null) continue;
                var res = a.interpretar(ast, tabla);
                if (res instanceof Errores) lista.add((Errores) res);
            }

            if (lista.isEmpty()) {
                jTextConsola.setText("No se encontraron errores.");
            } else {
                mostrarErrores(lista);
            }
        } else {
            // Mostrar los errores sintácticos y léxicos
            mostrarErrores(lista);
        }
    } catch (Exception ex) {
        ex.printStackTrace(); 
        jTextConsola.setText("Ocurrió un error al intentar compilar.");
    }
    }//GEN-LAST:event_jCompilarMouseClicked

    private void jCompilarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCompilarMouseEntered
         jCompilar.setBackground(new Color(50,81,175));
    }//GEN-LAST:event_jCompilarMouseEntered

    private void jCompilarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCompilarMouseExited
         jCompilar.setBackground(new Color(50,81,143));
    }//GEN-LAST:event_jCompilarMouseExited

    private void jLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLimpiarMouseClicked
        jTextAreaEntrada.setText("");
        jTextConsola.setText("");
        
        Principal.getInstance().getPanelDibujo().getFiguras().clear();
    Principal.getInstance().getPanelDibujo().repaint(); // Actualizar la vista

    // Limpiar el contenido de la tabla en el panel de reportes
    Operaciones panelReportes = Principal.getInstance().getPanelReportes();
    DefaultTableModel tableModel = (DefaultTableModel) panelReportes.getTbOperaciones().getModel();
    tableModel.setRowCount(0); 
    DefaultTableModel tableModel1 = (DefaultTableModel) panelReportes.getTbColores().getModel();
    tableModel1.setRowCount(0); 
    DefaultTableModel tableModel2 = (DefaultTableModel) panelReportes.getTbFiguras().getModel();
    tableModel2.setRowCount(0); 
    }//GEN-LAST:event_jLimpiarMouseClicked

    private void jLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLimpiarMouseEntered
        jLimpiar.setBackground(new Color(50,81,175));
    }//GEN-LAST:event_jLimpiarMouseEntered

    private void jLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLimpiarMouseExited
        jLimpiar.setBackground(new Color(50,81,143));
    }//GEN-LAST:event_jLimpiarMouseExited

    private void jAnimarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAnimarMouseClicked
        Figura figura = Principal.getInstance().getUltimaFigura();
    if (figura == null) {
        System.out.println("No hay figura para animar.");
        return;
    }
        System.out.println("Hay figura");

    // Mensaje de depuració

    }//GEN-LAST:event_jAnimarMouseClicked

    private void jAnimarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAnimarMouseEntered
        jAnimar.setBackground(new Color(50,81,175));
    }//GEN-LAST:event_jAnimarMouseEntered

    private void jAnimarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAnimarMouseExited
        jAnimar.setBackground(new Color(50,81,143));
    }//GEN-LAST:event_jAnimarMouseExited

    private void jCargarArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCargarArchivoMouseClicked
        JFileChooser fileChosser = new JFileChooser();
        int seleccion = fileChosser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //aqui selecciono y guardo el FILE que va a utilizar el FileReader
            File fichero = fileChosser.getSelectedFile();
            try {
                ArrayList<String> lista = this.cargaArchivo.leerFichero(fichero, this.jTextAreaEntrada);
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jCargarArchivoMouseClicked

    private void jCargarArchivoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCargarArchivoMouseEntered
         jCargarArchivo.setBackground(new Color(50,81,175));
    }//GEN-LAST:event_jCargarArchivoMouseEntered

    private void jCargarArchivoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCargarArchivoMouseExited
        jCargarArchivo.setBackground(new Color(50,81,143));
    }//GEN-LAST:event_jCargarArchivoMouseExited

    private void jPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPDFMouseClicked
        JPanel panelDibujo = Principal.getInstance().getPanelDibujo();
        ExportarPDF.exportarPanelComoPDF(panelDibujo);
    }//GEN-LAST:event_jPDFMouseClicked

    private void jPDFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPDFMouseEntered
         jPDF.setBackground(new Color(50,81,175));
    }//GEN-LAST:event_jPDFMouseEntered

    private void jPDFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPDFMouseExited
        jPDF.setBackground(new Color(50,81,143));
    }//GEN-LAST:event_jPDFMouseExited

    private void jExportarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jExportarMouseExited
        jExportar.setBackground(new Color(50,81,143));
    }//GEN-LAST:event_jExportarMouseExited

    private void jExportarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jExportarMouseEntered
        jExportar.setBackground(new Color(50,81,175));
    }//GEN-LAST:event_jExportarMouseEntered

    private void jExportarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jExportarMouseClicked
        JPanel panelDibujo = Principal.getInstance().getPanelDibujo();
        ExportarImagen.exportarPanelComoPNG(panelDibujo);
    }//GEN-LAST:event_jExportarMouseClicked

    private void mostrarErrores(LinkedList<Errores> lista) {
        StringBuilder errores = new StringBuilder();
        for (var error : lista) {
            errores.append(error.toString()).append("\n");
        }
        jTextConsola.setText(errores.toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jAnimar;
    private javax.swing.JPanel jCargarArchivo;
    private javax.swing.JPanel jCompilar;
    private javax.swing.JPanel jExportar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jLimpiar;
    private javax.swing.JPanel jPDF;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaEntrada;
    private javax.swing.JTextArea jTextConsola;
    private javax.swing.JLabel labelAnimar;
    private javax.swing.JLabel labelAnimar1;
    private javax.swing.JLabel labelCargarArchivo;
    private javax.swing.JLabel labelCompilar;
    private javax.swing.JLabel labelLimpiar;
    private javax.swing.JLabel labelPDF;
    // End of variables declaration//GEN-END:variables
}
